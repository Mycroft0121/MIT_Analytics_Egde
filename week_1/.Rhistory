setwd("D:/D Disk/Documents/books/MOOC/CS/MIT Analytical Edge")
mvt <- read.csv("mvtWeek1.csv")
head(mvt)
str(mvt)
max(mvt$ID)
min(mvt$Beat)
length(mvt$Arrest=="TRUE")
length(mvt$Arrest)
mvt$Arrest=="TRUE"
length(mvt[mvt$Arrest=="TRUE"])
mvt[mvt$Arrest=="TRUE"]
mvt[mvt$Arrest=="TRUE",1]
length(mvt[mvt$Arrest=="TRUE",1])
summary(mvt)
table(mvt$LocationDescription)
mvt[1,1]
mvt[1,]
mvt[2,]
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
summary(mvt$Date)
summary(mvt)
Sys.setlocale("LC_ALL", "C")
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
summary(mvt)
summary(DateConvert)
mvt$Month = months(DateConvert)
mvt$Weekday = Weekdays(DateConvert)
mvt$Date = DateConvert
mvt$Weekday = Weekday(DateConvert)
DateConvert
months(DateConvert)
table(DateConvert)
days(DateConvert)
mvt$Weekday = weekdays(DateConvert)
table(mvt)
summary(mvt)
View(mvt)
table(mvt$Date)
table(mvt$Month)
summary(table(mvt$Month))
table(table(mvt$Month))
sorted(table(mvt$Month))
sort(table(mvt$Month))
sort(table(mvt$Weekday))
a<-mvt[mvt$Arrest=="TRUE",12]
sort(table(a))
table(mvt$Arrest,mvt$Month)
hist(mvt$Date, breaks=100)
boxplot(mvt$Date ~ mvt$Arrest)
table(Date)
table(mvt$Date)
View(mvt)
mvt$Year = years(DateConvert)
mvt$Year = year(DateConvert)
mvt$Year = y(DateConvert)
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
summary(mvt$Date)
mvt$Date$y
mvt$Date==2001
table(mvt$Arrest,mvt$Date)
table(mvt$Arrest,mvt$Year)
summary(table(mvt$Arrest,mvt$Year))
sum(table(mvt$Arrest,mvt$Year))
table(mvt$Arrest,mvt$Year)[2,]
table(mvt$Arrest,mvt$Year)[2,][1,]=="2001"
sum(table(mvt$Arrest,mvt$Year)[2,])
2152/15536
table(mvt$Arrest,mvt$Year)
(18517+2152)/sum(table(mvt$Arrest,mvt$Year))
2152/(18517+2152)
1212/(1212+13068)
550/(550+13542)
sort(table(mvt$LocationDescription))
summary(sort(table(mvt$LocationDescription)))
Top5 <- mvt[mvt$LocationDescription=="STREET"|mvt$LocationDescription=="PARKING LOT/GARAGE(NON.RESID.)"|mvt$LocationDescription=="ALLEY"|mvt$LocationDescription=="GAS STATION"|mvt$LocationDescription=="DRIVEWAY - RESIDENTIAL",]
str(Top5)
Top5$LocationDescription=factor(Top5$LocationDescription)
str(Top5)
table(Top5$LocationDescription,Top5$Arrest)
249/2054
132/1543
439/1672
table(Top5$LocationDescription, Top5$Weekdays)
a <- Top[Top5$LocationDescription=="GAS STATION",]
a <- Top5[Top5$LocationDescription=="GAS STATION",]
Table(a[a$Weekday])
table(a[a$Weekday])
table(a[a$Weekday,])
table(a[a$Weekday,13])
a$Weekday
table(a$Weekday)
sort(table(a$Weekday))
a <- Top5[Top5$LocationDescription=="DRIVEWAY - RESIDENTIAL",]
sort(table(a$Weekday))
WHO <- read.csv("WHO.csv")
mean(WHO$Over60)
table(WHO$Over60)
str(WHO)
table(WHO)
summary(WHO)
which.min(WHO$Over60)
WHO$Country[183]
which.max(WHO$LiteracyRate)
WHO$Country[44]
tapply(WHO$ChildMortality, WHO$Region, mean)
USDA = read.csv("USDA.csv")
str(USDA)
summary(USDA)
which.max(USDA$Sodium)
name(USDA)
names(USDA)
USDA$Description[265]
HighSodium = subset(USDA, Sodium>10000)
nrow(HighSodium)
HighSodium$Description
match("CAVIAR", USDA$Description)
USDA$Sodium[4154]
Plot(USDA$Protein,USDA$TotalFat)
Plot(USDA$Protein,USDA$TotalFat)
pot(USDA$Protein,USDA$TotalFat)
plot(USDA$Protein,USDA$TotalFat)
plot(USDA$Protein,USDA$TotalFat, xlab ="Protein",ylab="Fat",main="Protein vs Fat", col = "red"))
plot(USDA$Protein,USDA$TotalFat, xlab ="Protein",ylab="Fat",main="Protein vs Fat", col = "red")
hist(USDA$VitaminC, xlab = "Vitamin C (mg)",main="Histogram of Vitamin C Levels", xlim = c(0,100))
hist(USDA$VitaminC, xlab = "Vitamin C (mg)",main="Histogram of Vitamin C Levels", xlim = c(0,100),breaks = 100)
hist(USDA$VitaminC, xlab = "Vitamin C (mg)",main="Histogram of Vitamin C Levels", xlim = c(0,100),breaks = 2000)
boxplot(USDA$Sugar,main = "Boxplot of Sugar Levels", ylab = "Sugar (g)")
HighSodium = USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE)
str(HighSodium)
HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE))
str(HighSodium)
USDA$HighSodium = HighSodium
USDA$HighProtein = as.numeric(USDA$Protein > mean(USDA$Protein, na.rm=TRUE))
USDA$HighFat = as.numeric(USDA$Fat > mean(USDA$Fat, na.rm=TRUE))
USDA$HighFat = as.numeric(USDA$TotalFat > mean(USDA$TotalFat, na.rm=TRUE))
USDA$HighCarbs = as.numeric(USDA$Carbohydrate > mean(USDA$Carbohydrate, na.rm=TRUE))
table(USDA$Sodium)
table(USDA$HighSodium, USDA$HighFat)
tapply(USDA$Iron,USDA$HighProtein, mean, na.rm=TRUE)
tapply(USDA$VitaminC,USDA$HighCarb, max, na.rm=TRUE)
tapply(USDA$VitaminC,USDA$HighCarb, summary, na.rm=TRUE)
IBM = read.csv("IBMStock.csv")
GE = read.csv("GEStock.csv")
ProcterGamble = read.csv("ProcterGambleStock.csv")
CocaCola = read.csv("CocaColaStock.csv")
Boeing = read.csv("BoeingStock.csv")
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(IBM$Date, "%m/%d/%y")
CocaCola$Date = as.Date(IBM$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(IBM$Date, "%m/%d/%y")
Boeing$Date = as.Date(IBM$Date, "%m/%d/%y")
summary(Boeing$Date)
mean(IBM$StockPrice)
min(GE$StockPrice)
max(CocaCola$StockPrice)
median(Boeing$StockPrice)
sd(ProcterGamble$StockPrice)
plot(CocaCola$Date,CocaCola$StockPrice)
lines(ProcterGamble$Date, ProcterGamble$StockPrice)
plot(CocaCola$Date,CocaCola$StockPrice,col="red")
lines(ProcterGamble$Date, ProcterGamble$StockPrice,col="blue")
plot(CocaCola$Date,CocaCola$StockPrice,col="red",type="l")
lines(ProcterGamble$Date, ProcterGamble$StockPrice,col="blue")
lines(ProcterGamble$Date, ProcterGamble$StockPrice,col="blue",lty=2)
abline(v=as.Date(c("2000-03-01")),lwd=2)
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
plot(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432], lty=2, col="blue", ylim=c(0,210))
plot(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432], lty=2, col="blue", ylim=c(0,210))
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432], lty=2, col="blue", ylim=c(0,210))
lines(IBM$Date[301:432], IBM$StockPrice[301:432], lty=3, col="green", ylim=c(0,210))
lines(GE$Date[301:432], GE$StockPrice[301:432], lty=4, col="orange", ylim=c(0,210))
lines(Boeing$Date[301:432], Boeing$StockPrice[301:432], lty=5, col="purple", ylim=c(0,210))
abline(v=as.Date(c("1997-09-01")),lwd=2)
abline(v=as.Date(c("1997-11-01")),lwd=2)
abline(v=as.Date(c("1997-09-01")),lwd=1)
abline(v=as.Date(c("1997-11-01")),lwd=1)
abline(v=as.Date(c("1997-09-01")),lwd=0)
tapply(IBM$StockPrice,months(IBM$Date),mean)
mean(IBM$StockPrice)
tapply(GE$StockPrice,months(GE$Date),mean)
tapply(CocaCola$StockPrice,months(CocaCola$Date),mean)
sort(tapply(GE$StockPrice,months(GE$Date),mean))
sort(tapply(CocaCola$StockPrice,months(CocaCola$Date),mean))
CPS <-read.csv("CPSData.csv")
str(CPS)
table(CPS$Industry)
sort(table(CPS$Industry)
)
sort(table(CPS$Region))
sort(table(CPS$State))
table(CPS$Citizenship)
(116639+7073)/(116639+7073+7590)
table(CPS$Hispanic,CPS$Race)
table(CPS$Race,CPS$Hispanic)
mean(CPS$PeopleInHousehold)
mean(CPS$Region)
str(CPS$Region)
summary(CPS$Region)
summary(CPS$State)
summary(CPS$MetroAreaCode)
summary(CPS$Age)
summary(CPS$Married)
summary(CPS$Sex)
summary(CPS$Education)
1516/131302
summary(CPS$Race)
summary(CPS$Hispanic)
summary(CPS$CountryOfBirthCode)
summary(CPS$Citizenship)
summary(CPS$EmploymentStatus)
summary(CPS$Industry)
summary(CPS$PeopleInHousehold)
summary(CPS$Region)
summary(CPS$State)
summary(CPS$MetroAreaCode)
summary(CPS$Age)
summary(CPS$Married)
summary(CPS$Sex)
summary(CPS$Education)
summary(CPS$Race)
summary(CPS$Hispanic)
summary(CPS$CountryOfBirthCode)
table(CPS$Region, is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Sex))
table(CPS$Sex, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))
table(CPS$State, is.na(CPS$MetroAreaCode))
summary(table(CPS$State, is.na(CPS$MetroAreaCode)))
table(table(CPS$State, is.na(CPS$MetroAreaCode)))
str(table(CPS$State, is.na(CPS$MetroAreaCode)))
table(CPS$State, is.na(CPS$MetroAreaCode))
table(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(CPS$Region, is.na(CPS$MetroAreaCode),mean)
tapply( is.na(CPS$MetroAreaCode),CPS$Region,mean)
tapply( is.na(CPS$MetroAreaCode),CPS$State,mean)
sort(tapply( is.na(CPS$MetroAreaCode),CPS$State,mean))
MetroAreaMap <- read.csv("MetroAreaCodes.csv")
CountryMap <- read.csv()
CountryMap <- read.csv("CountryCodes.csv")
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code,all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
summary(CPS)
is.na(CPS$MetroArea)
sum(is.na(CPS$MetroArea))
sort(table(CPS$MetroArea)
sort(table(CPS$MetroArea))
sort(table(CPS$MetroArea))
sort(tapply(CPS$Hispanic,CPS$MetroArea,mean))
sort(tapply(CPS$Race=="Asian",CPS$MetroArea,mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean,na.rm=TRUE))
summary(CPS$Education)
sort(tapply(CPS$Education == "Doctorate degree", CPS$MetroArea, mean,na.rm=TRUE))
CPS = merge(CPS, CountryMap, by.x="CountryCode", by.y="Code", all.x=TRUE)
summary(CountryMap)
summary(MetroAreaMap)
CPS = merge(CPS, CountryMap, by.x="Country", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
str(CPS)
table(CPS$Country)
table(CPS$Country!="United States",CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",sum)
tapply(CPS$Country!="United States",CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",sum)
tapply(CPS$Country!="United States",CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA")
tapply(CPS$Country,CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA")
tapply(CPS$Country!="United States",CPS$MetroArea, sum)
table(CPS$Country, CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA")
NY <- subset(CPS, CPS$MetroArea==”New York-Northern New Jersey-Long Island, NY-NJ-PA”,na.rm=TRUE)
NY <- subset(CPS, CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",na.rm=TRUE)
NY <- subset(NY, NY$Country!=”NA’s”)
NY <- subset(NY, NY$Country!="NA's")
NYNonUS <- subset(NY,NY$Country!="United States")
str(NY)
str(NYNonUS)
table(CPS$Country, CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA")
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
table(CPS$Country.x)
table(CPS$Country.y)
table(CPS$Country.x)
CPS = merge(CPS, CountryMap, by.x="CountryCode", by.y="Code", all.x=TRUE)
str(CPS)
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
str(CPS)
summary(Country)
summary(CPS$Country)
table(CPS$Country!="United States")
sort(table(CPS$Country))
sort(table(CPS$Country))
sub <-CPS[CPS$Country!="United States"]
sub <-CPS[CPS$Country!="United States",]
sub <-CPS[CPS$Country!="United States"&CPS$Region=="New York-Northern New Jersey-Long Island, NY-NJ-PA",]
sum(sub)
summary(sub)
str(sub)
sub <-CPS[CPS$Region=="New York-Northern New Jersey-Long Island, NY-NJ-PA",]
sub
sub <-CPS[CPS$Country!="United States"&CPS$MetroArea.x=="New York-Northern New Jersey-Long Island, NY-NJ-PA",]
summary(sub)
sub <-CPS[CPS$MetroArea.x=="New York-Northern New Jersey-Long Island, NY-NJ-PA",]
summary(sub$Country!="United State")
summary(sub)
str(sub)
5404/39647
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
summary(CPS)
sum(is.na(CPS$MetroArea))
sort(table(CPS$MetroArea))
sort(tapply(CPS$Hispanic,CPS$MetroArea,mean))
sort(tapply(CPS$Race=="Asian",CPS$MetroArea,mean))
sort(tapply(CPS$Education == "Doctorate degree", CPS$MetroArea, mean,na.rm=TRUE))
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
sort(table(CPS$Country))
summary(CPS)
NY <- subset(CPS, CPS$MetroArea==”New York-Northern New Jersey-Long Island, NY-NJ-PA”,na.rm=TRUE)
NY <- subset(CPS, CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",na.rm=TRUE)
NY <- subset(NY, NY$Country!="NA's")
NYNonUS <- subset(NY,NY$Country!="United States")
str(NY)
NY <- subset(CPS, CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",na.rm=TRUE)
str(NY)
NY <- subset(NY, NY$Country!="NA's")
str(NY)
NY <- subset(CPS, CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",na.rm=TRUE)
NYNonUS <- subset(NY,NY$Country!="United States")
str(NYNonUS)
summary(NY)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country.x != "United States")
tapply(CPS$Country.x=="India", CPS$Region,sum,na.rm=TRUE)
sort(tapply(CPS$Country.x=="India", CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(CPS$Country.x=="Brazil", CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(CPS$Country.x=="Somalia", CPS$MetroArea,sum,na.rm=TRUE))
str(CPS)
sort(table(CPS$Industry))
sort(table(CPS$State))
table(CPS$Citizenship)
table(CPS$Hispanic,CPS$Race)
table(CPS$Race,CPS$Hispanic)
table(CPS$Age, is.na(CPS$Married))
table(CPS$State, is.na(CPS$MetroAreaCode))
table(CPS$Region, is.na(CPS$MetroAreaCode))
sort(tapply( is.na(CPS$MetroAreaCode),CPS$State,mean))
MetroAreaMap <- read.csv("MetroAreaCodes.csv")
CountryMap <- read.csv("CountryCodes.csv")
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
summary(CPS)
sum(is.na(CPS$MetroArea))
sort(table(CPS$MetroArea))
sort(tapply(CPS$Hispanic,CPS$MetroArea,mean))
sort(tapply(CPS$Race=="Asian",CPS$MetroArea,mean))
sort(tapply(CPS$Education == "Doctorate degree", CPS$MetroArea, mean,na.rm=TRUE))
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country.x != "United States")
sort(tapply(CPS$Country.x=="India", CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(CPS$Country.x=="Brazil", CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(CPS$Country.x=="Somalia", CPS$MetroArea,sum,na.rm=TRUE))
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
summary(CPS)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country!= "United States")
table(CPS$MetroArea.y == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country!= "United States")
poll<-read.csv("AnonymityPoll.csv")
summary(poll)
table(poll$Smartphone)
